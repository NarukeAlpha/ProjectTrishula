<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="52469ac4-73b2-4de2-aa5e-11b37342cfa2" name="Changes" comment="added macos build and re build exe">
      <change afterPath="$PROJECT_DIR$/Writerside/topics/SetUp.topic" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Writerside/pt1.tree" beforeDir="false" afterPath="$PROJECT_DIR$/Writerside/pt1.tree" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="Go File" />
        <option value="HTTP Request" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.22.3" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="Release-1" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;NarukeAlpha&quot;
  }
}</component>
  <component name="GitHubPullRequestState">{
  &quot;prStates&quot;: [
    {
      &quot;id&quot;: {
        &quot;id&quot;: &quot;PR_kwDOJunZ4s5wt0C8&quot;,
        &quot;number&quot;: 8
      },
      &quot;lastSeen&quot;: 1716875709948
    }
  ]
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/NarukeAlpha/ProjectTrishula.git&quot;,
    &quot;accountId&quot;: &quot;37c18f5c-2106-47e3-99b7-7610e7dfbbc3&quot;
  }
}</component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/data.dev.json" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="InstanceColorv3">
    <option name="map">
      <map>
        <entry key="$PROJECT_DIR$/Writerside/pt1.tree">
          <value>
            <ColorState>
              <option name="customOrder" value="1" />
              <option name="first">
                <RgbState>
                  <option name="blue" value="60" />
                  <option name="darkBlue" value="60" />
                  <option name="darkGreen" value="68" />
                  <option name="darkRed" value="206" />
                  <option name="green" value="68" />
                  <option name="red" value="206" />
                </RgbState>
              </option>
              <option name="second">
                <RgbState>
                  <option name="blue" value="65" />
                  <option name="darkBlue" value="65" />
                  <option name="darkGreen" value="126" />
                  <option name="darkRed" value="231" />
                  <option name="green" value="126" />
                  <option name="red" value="231" />
                </RgbState>
              </option>
            </ColorState>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="false" />
    <option name="myAllFileTypesSelected" value="true" />
    <option name="mySelectedFileTypes">
      <set />
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2R83Molw0Wv8Hdim1W1O2zNDxWg" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build ProjectTrishula main.go.executor": "Run",
    "Go Build.webhook_test.executor": "Debug",
    "Go Test.webhookManager_test.go.executor": "Debug",
    "HTTP Request.All in ServerTest.executor": "Run",
    "HTTP Request.ServerTest | #1.executor": "Run",
    "HTTP Request.ServerTest | #2.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "Writerside.Web Archive (pt1).executor": "Run",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/User/IdeaProjects/ProjectTrishula",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Problems",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "editor.preferences.completion",
    "vue.rearranger.settings.migration": "true",
    "writerside.last.selected.productProjectTrishula": "pt1"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlserver",
      "mongo"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\bagaa\IdeaProjects\ProjectTrishula" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\User\IdeaProjects\ProjectTrishula" />
    </key>
  </component>
  <component name="RunManager" selected="Writerside.Web Archive (pt1)">
    <configuration name="go build ProjectTrishula main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="ProjectTrishula" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="ProjectTrishula" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/../ProjectTrishula|$PROJECT_DIR$/main.go|$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="webhook_test" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ProjectTrishula" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="ProjectTrishula" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/monitorService/mcore/webhookManager.go" />
      <method v="2" />
    </configuration>
    <configuration name="All in ServerTest" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/ServerTest.http">
      <method v="2" />
    </configuration>
    <configuration name="ServerTest | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/ServerTest.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ServerTest | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/ServerTest.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.ServerTest | #2" />
        <item itemvalue="HTTP Request.ServerTest | #1" />
        <item itemvalue="HTTP Request.All in ServerTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.17011.79" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.17011.79" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="52469ac4-73b2-4de2-aa5e-11b37342cfa2" name="Changes" comment="" />
      <created>1686617836916</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1686617836916</updated>
      <workItem from="1686617837925" duration="22879000" />
      <workItem from="1686861090968" duration="3661000" />
      <workItem from="1686962048450" duration="1588000" />
      <workItem from="1687125845645" duration="6196000" />
      <workItem from="1688617144984" duration="41000" />
      <workItem from="1688617200347" duration="209000" />
      <workItem from="1689265444335" duration="595000" />
      <workItem from="1713493470349" duration="20607000" />
      <workItem from="1713820348753" duration="13020000" />
      <workItem from="1715356496651" duration="249000" />
      <workItem from="1715357090814" duration="422000" />
      <workItem from="1715398776880" duration="2805000" />
      <workItem from="1715403389961" duration="39727000" />
      <workItem from="1716085063118" duration="30000" />
      <workItem from="1716085109530" duration="1375000" />
      <workItem from="1716087476022" duration="19056000" />
      <workItem from="1716141064856" duration="40176000" />
      <workItem from="1716332756461" duration="33000" />
      <workItem from="1716332806469" duration="420000" />
      <workItem from="1716333248910" duration="296000" />
      <workItem from="1716333568944" duration="4433000" />
      <workItem from="1716352207106" duration="10000" />
      <workItem from="1716352331503" duration="15000" />
      <workItem from="1716355080941" duration="477000" />
      <workItem from="1716355582887" duration="18967000" />
      <workItem from="1717028691501" duration="2908000" />
    </task>
    <task id="LOCAL-00001" summary="Joined all 3 separate projects into one working file.">
      <created>1686622578398</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1686622578398</updated>
    </task>
    <task id="LOCAL-00002" summary="Addede a data.json file to store values.  Added first time logic to gather information to run programs, if they exist goes straight to initialization.  Need to implement further to all 3 modules">
      <created>1686639245686</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1686639245687</updated>
    </task>
    <task id="LOCAL-00003" summary="Addede a data.json file to store values.  Added first time logic to gather information to run programs, if they exist goes straight to initialization.  Need to implement further to all 3 modules">
      <created>1686639257896</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1686639257896</updated>
    </task>
    <task id="LOCAL-00004" summary="builded main.go out to push as a release in github">
      <created>1686639352550</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1686639352550</updated>
    </task>
    <task id="LOCAL-00005" summary="Finished Json implementation for set up. bot now can restart and automatically read settings based on user defined Json. added 3 webpages to map logic but still need work, only asurascans supported at the moment.">
      <created>1686734235297</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1686734235297</updated>
    </task>
    <task id="LOCAL-00006" summary="Started rewrite with better code practices.&#10;&#10;Touched main and Discord service. &#10;&#10;WIP on monitor task&#10;&#10;DB service is non-functional (Needs mongodb rewrite)">
      <option name="closed" value="true" />
      <created>1713501302312</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1713501302312</updated>
    </task>
    <task id="LOCAL-00007" summary="started work on monitor task, re did website map for asurascans, its also the only supported website for now.">
      <option name="closed" value="true" />
      <created>1713593710580</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1713593710580</updated>
    </task>
    <task id="LOCAL-00008" summary="edited .gitignore">
      <option name="closed" value="true" />
      <created>1713825118986</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1713825118986</updated>
    </task>
    <task id="LOCAL-00009" summary="Middle of rework, transitioning from mysql to mongo db, cleaning all 3 modules.  Monitor module is stable, database module is still being transitioned, discord module needs improvements">
      <option name="closed" value="true" />
      <created>1715752954162</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1715752954162</updated>
    </task>
    <task id="LOCAL-00010" summary="database connects now succesfully, need to verify collection is coming back and being sorted as intended">
      <option name="closed" value="true" />
      <created>1715836368667</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1715836368667</updated>
    </task>
    <task id="LOCAL-00011" summary="Finished DB and Monitor rebuild&#10;&#10;Discord integration to be tested an expanded">
      <option name="closed" value="true" />
      <created>1716172968782</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1716172968782</updated>
    </task>
    <task id="LOCAL-00012" summary="Finished discord integration&#10;&#10;asurascans and hivescans supported.  requires testing before rewrite is compelted">
      <option name="closed" value="true" />
      <created>1716270304798</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1716270304798</updated>
    </task>
    <task id="LOCAL-00013" summary="adding writerside documetns">
      <option name="closed" value="true" />
      <created>1716871445629</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1716871445629</updated>
    </task>
    <task id="LOCAL-00014" summary="added macos build and re build exe">
      <option name="closed" value="true" />
      <created>1717038852666</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1717038852666</updated>
    </task>
    <option name="localTasksCounter" value="15" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Joined all 3 separate projects into one working file." />
    <MESSAGE value="Addede a data.json file to store values.  Added first time logic to gather information to run programs, if they exist goes straight to initialization.  Need to implement further to all 3 modules" />
    <MESSAGE value="builded main.go out to push as a release in github" />
    <MESSAGE value="Finished Json implementation for set up. bot now can restart and automatically read settings based on user defined Json. added 3 webpages to map logic but still need work, only asurascans supported at the moment." />
    <MESSAGE value="Started rewrite with better code practices.&#10;&#10;Touched main and Discord service. &#10;&#10;WIP on monitor task&#10;&#10;DB service is non-functional (Needs mongodb rewrite)" />
    <MESSAGE value="started work on monitor task, re did website map for asurascans, its also the only supported website for now." />
    <MESSAGE value="edited .gitignore" />
    <MESSAGE value="Middle of rework, transitioning from mysql to mongo db, cleaning all 3 modules.  Monitor module is stable, database module is still being transitioned, discord module needs improvements" />
    <MESSAGE value="database connects now succesfully, need to verify collection is coming back and being sorted as intended" />
    <MESSAGE value="Finished DB and Monitor rebuild&#10;&#10;Discord integration to be tested an expanded" />
    <MESSAGE value="Finished discord integration&#10;&#10;asurascans and hivescans supported.  requires testing before rewrite is compelted" />
    <MESSAGE value="adding writerside documetns" />
    <MESSAGE value="added macos build and re build exe" />
    <option name="LAST_COMMIT_MESSAGE" value="added macos build and re build exe" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/discordService/discord.go</url>
          <line>276</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="*(*&quot;github.com/playwright-community/playwright-go.frameImpl&quot;)(824637899904)" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>